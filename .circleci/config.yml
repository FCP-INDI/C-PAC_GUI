version: 2.1

jobs:

  build-macos:
    macos:
      xcode: "9.0"
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - checkout
      - run:
          name: Setup Certificates
          command: |
            security create-keychain -p $keychain default.keychain
            echo $certificate | base64 -D > /tmp/default.p12
            security import /tmp/default.p12 -t agg -k default.keychain -P '' -A
      - run:
          name: Setup NVM
          command: |
            export NODE_VERSION=$(cat .nvmrc)
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash -s -- --no-use
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
            echo 'nvm install v11.12.0' >> $BASH_ENV
            echo 'nvm alias default v11.12.0' >> $BASH_ENV
      - run:
          command: yarn
      - run:
          command: CSC_LINK=file:///tmp/default.p12 yarn run package:mac
      - run:
          command: mv dist dist-macos
      - persist_to_workspace:
          root: .
          paths:
            - dist-macos

  build-linux:
    docker:
      - image: circleci/node:11.12.0
    environment:
      BASH_ENV: ".circleci/bashrc"
    steps:
      - checkout
      - run:
          command: yarn
      - run:
          command: yarn run package:linux
      - run:
          command: mv dist dist-linux
      - persist_to_workspace:
          root: .
          paths:
            - dist-linux

  build-web:
    docker:
      - image: circleci/node:11.12.0
    environment:
      BASH_ENV: ".circleci/bashrc"
    steps:
      - checkout
      - run:
          command: yarn
      - run:
          command: |
            TARGET=electron yarn run build
            mv ./app/dist dist-web-electron
      - run:
          command: |
            TARGET=browser yarn run build
            mv ./app/dist dist-web-browser
      - persist_to_workspace:
          root: .
          paths:
            - dist-web-electron
            - dist-web-browser

  deploy:
    docker:
      - image: circleci/node:11.12.0
    environment:
      BASH_ENV: ".circleci/bashrc"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install deployment dependencies
          command: |
            wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 -O /home/circleci/linux-amd64-github-release.tar.bz2
            tar xjf /home/circleci/linux-amd64-github-release.tar.bz2 -C /home/circleci
            sudo mv /home/circleci/bin/linux/amd64/github-release /usr/local/bin
            rm -Rf /home/circleci/bin/linux
            chmod a+x /usr/local/bin/github-release
      - run:
          name: Configure git user
          command: |
            git config --global user.email "ci-build@fcp-indi.github.com"
            git config --global user.name "ci-build"
      - run:
          name: Deploy
          command: |
            VERSION=`jq -r '.version' package.json`
            VERSION=$(["${CIRCLE_BRANCH}" == "master"] && echo "${VERSION}" || echo "${VERSION}-rc")
            RELEASE=$(["${CIRCLE_BRANCH}" == "master"] && echo "Version ${VERSION}" || echo "Release candidate ${VERSION}")

            if ["${CIRCLE_BRANCH}" != "master"]; then
              git tag --delete "${VERSION}" | true
              git push --delete origin "${VERSION}" | true
              github-release delete -u FCP-INDI -r C-PAC_GUI --tag "${VERSION}" | true
            fi

            git tag "${VERSION}"
            git push --tags
            github-release release -u FCP-INDI -r C-PAC_GUI --tag "${VERSION}" --name "${RELEASE}"


            git clone --single-branch --branch gh-pages git@github.com:FCP-INDI/C-PAC_GUI.git /tmp/repo

            rm -Rf /tmp/repo/versions/$VERSION 2> /dev/null | true
            mkdir -p /tmp/repo/versions/$VERSION
            mv /tmp/workspace/dist-web-browser /tmp/repo/versions/$VERSION/browser
            mv /tmp/workspace/dist-web-electron /tmp/repo/versions/$VERSION/electron

            # TODO add git-fs
            # mv /tmp/workspace/dist-linux /tmp/repo/versions/$VERSION/linux
            # mv /tmp/workspace/dist-macos /tmp/repo/versions/$VERSION/macos

            ls -1 /tmp/repo/versions > /tmp/repo/versions.txt

            cd /tmp/repo
            git add .
            git commit -m "updates"
            git push -f origin gh-pages

workflows:
  version: 2
  build:
    jobs:

      # - build-linux:
      #     filters:
      #       branches:
      #         ignore: gh-pages
      # - build-macos:
      #     filters:
      #       branches:
      #         ignore: gh-pages
      #     context: c-pac_gui
      - build-web:
          filters:
            branches:
              ignore: gh-pages
      - deploy:
          filters:
            branches:
              only:
                - master
                - develop
          requires:
            # - build-linux
            # - build-macos
            - build-web
